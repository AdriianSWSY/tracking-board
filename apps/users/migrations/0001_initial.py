# Generated by Django 2.0.6 on 2018-06-07 15:11

import apps.users.models.users
import core.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(default='96b00b988b9c491b81421f7898d06905', max_length=32, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, null=True, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=64, verbose_name='first name')),
                ('last_name', models.CharField(max_length=64, verbose_name='last name')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/%Y/%m/%d', verbose_name='Avatar')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('employee', 'Employee'), ('publisher', 'Publisher')], default='admin', max_length=254, null=True, verbose_name='role')),
                ('team', models.CharField(blank=True, choices=[('application', 'Application'), ('mobile content', 'Mobile Content'), ('video', 'Video')], max_length=255, null=True, verbose_name='Team')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Phone number')),
                ('skype_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='skype id')),
                ('financial_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='financial email')),
                ('document', models.FileField(blank=True, null=True, upload_to='documents/%Y/%m/%d', validators=[core.validators.validate_pdf_ext])),
                ('legal_entity_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Legal Entity Name')),
                ('contact_point', models.CharField(blank=True, max_length=255, null=True, verbose_name='Point of contact')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_advertisers', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_managers', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', apps.users.models.users.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Advertiser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='871397f8dbc24b80be339f92b859ab0d', max_length=32, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, null=True, unique=True, verbose_name='email')),
                ('team', models.CharField(blank=True, choices=[('application', 'Application'), ('mobile content', 'Mobile Content'), ('video', 'Video')], max_length=255, null=True, verbose_name='Team')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Phone number')),
                ('skype_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='skype id')),
                ('financial_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='financial email')),
                ('document', models.FileField(blank=True, null=True, upload_to='documents/%Y/%m/%d', validators=[core.validators.validate_pdf_ext])),
                ('legal_entity_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Legal Entity Name')),
                ('contact_point', models.CharField(blank=True, max_length=255, null=True, verbose_name='Point of contact')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_suppliers', to=settings.AUTH_USER_MODEL)),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_publishers', related_query_name='user_publisher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'advertisers',
            },
        ),
    ]
